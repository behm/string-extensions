# This is a basic workflow to help you get started with Actions

name: "Build and Deploy"

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  PROJECT_PATH: Behm.Extensions.Strings/Behm.Extensions.Strings.csproj
  PACKAGE_OUTPUT_DIRECTORY: ${{ github.workspace }}/output
  NUGET_SOURCE_URL: http://api.nuget.org/v3/index.json

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x
          
      - name: Restore packages
        run: dotnet restore ${{ env.PROJECT_PATH }}

      - name: Build project
        run: dotnet build ${{ env.PROJECT_PATH }} --no-restore --configuration Release

      - name: Pack
        run: dotnet pack ${{ env.PROJECT_PATH }} --no-restore --no-build --configuration Release --include-symbols --output ${{ env.PACKAGE_OUTPUT_DIRECTORY }}

#  test:
#    name: Test
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#      - name: Run unit tests
#        run: dotnet test ${{ env.PROJECT_PATH }} --no-restore --no-build --logger trx --results-directory "TestResults-${{ matrix.dotnet-version }}"
  
  publish:
    name: Publish
    #needs: test
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Publish to NuGet
        run: dotnet nuget push ${{ env.PACKAGE_OUTPUT_DIRECTORY }}\*.nupkg -k ${{ secrets.NUGET_API_KEY }} -s ${{ env.NUGET_SOURCE_URL }}
